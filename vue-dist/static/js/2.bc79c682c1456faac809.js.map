{"version":3,"sources":["webpack:///src/components/User-defined.vue","webpack:///./src/components/User-defined.vue?815f","webpack:///./src/components/User-defined.vue"],"names":["User_defined","data","dateCountData","testdata","dateQualityData","dateAnalysisData","dateProcesstimeData","valueDate","link","created","this","computed","myBegin_datetime","myEnd_datetime","methods","table_dateCount","_this","$http","method","url","then","response","status","result","catch","error","console","log","objectSpanMethod","_ref","row","rowIndex","column","columnIndex","area","rowspan","colspan","draw_dateCount","_this2","cityList","transmissionValueList","dynamicsValueList","exchangeValueList","ANValueList","wirelessValueList","l","length","i","push","myChart","$echarts","init","document","getElementById","setOption","color","title","text","tooltip","trigger","axisPointer","type","legend","grid","left","right","bottom","containLabel","yAxis","height","xAxis","series","name","stack","label","normal","show","position","animation","setTimeout","imginfo","getDataURL","beginDate","endDate","quarterly_amount","table_dateQuality","_this3","getAverage","param","columns","sums","average","forEach","index","values","map","item","Number","property","every","value","isNaN","reduce","prev","curr","toFixed","draw_dateIntimeRate","_this4","valueList","quarterly_intime","draw_dateAverageTime","_this5","quarterly_dealtime","draw_dateOver48Rate","_this6","quarterly_over48","table_dateAnalysis","_this7","table_dateProcesstime","_this8","draw_dateAnalysis","_this9","lineValueList","powerValueList","equipmentValueList","environmentValueList","otherValueList","toolbox","feature","saveAsImage","boundaryGap","quarterly_reason_amount","draw_dateLinePower","_this10","axisLabel","formatter","Math","abs","axisTick","interval","quarterly_specific_amount","draw_dateProcesstime","_this11","lineTimeValueList","powerTimeValueList","quarterly_specific_dealtime","DataFilter","mounted","components_User_defined","render","_vm","_h","$createElement","_c","_self","attrs","_v","staticStyle","text-align","font-weight","href","background-color","border","staticClass","width","margin","ref","model","form","label-width","gutter","span","start-placeholder","end-placeholder","value-format","default-time","callback","$$v","expression","on","click","$event","slot","id","margin-bottom","row-style","cell-style","stripe","show-summary","span-method","prop","align","minwidth","summary-method","staticRenderFns","Component","__webpack_require__","normalizeComponent","ssrContext","__webpack_exports__"],"mappings":"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","file":"static/js/2.bc79c682c1456faac809.js","sourcesContent":["<template>\n  <div>\n        <el-container>\n            <el-header>\n              <a name=\"top\"></a>广东电信故障工单管控通报\n            </el-header>\n            <span style=\"text-align:center;color:rgb(21,82,179);font-weight:bold\">\n              <a href=\"#count\">△全省网络故障单量情况统计</a>\n              <a href=\"#quality\">△全省故障工单处理质量情况分析</a>\n              <a href=\"#analysis\">△全省故障工单处理质量情况分析</a>\n            <hr style=\"height:1px; background-color:rgb(21,82,179);border:none\"/>\n            </span>\n          <div class=\"time-filter\" style=\"width: 600px; margin: 0 auto\" >\n            <div class=\"block\" style=\"margin: 0 auto\">\n              <el-form ref=\"form\"  :model=\"form\" label-width=\"80px\">\n                <el-row :gutter=\"200\">\n                  <el-col :span=\"11\">\n                    <el-form-item>\n                      <el-date-picker\n                        v-model=\"valueDate\"\n                        type=\"daterange\"\n                        start-placeholder=\"开始日期\"\n                        end-placeholder=\"结束日期\"\n                        value-format=\"yyyy-MM-dd\"\n                        :default-time=\"['00:00:00', '23:59:59']\">\n                      </el-date-picker>\n                    </el-form-item>\n                  </el-col>\n                  <el-col :span=\"5\">\n                    <el-form-item>\n                      <el-button type=\"primary\" @click=\"DataFilter()\" >提交</el-button>\n                    </el-form-item>\n                  </el-col>\n                  <el-col :span=\"5\">\n                    <el-form-item>\n                      <a :href=\"link +'docx/quarter/'+ this.myBegin_datetime + '/' + this.myEnd_datetime\">\n                        <el-button type=\"success\" slot=\"trigger\" >下载</el-button>\n                      </a>\n                    </el-form-item>\n                  </el-col>\n                </el-row>\n              </el-form>\n            </div>\n          </div>\n            <el-main>\n                <div class=\"main\">\n                  <a href=\"#top\"><h3 id=\"count\">一、  全省网络故障单量情况统计</h3></a>\n                  <el-row>\n                    <el-col :span=\"24\">\n                      <div id=\"chart_dateCount\" style=\"height: 400px; border: 1px solid;margin-bottom: 10px\"></div>\n                      <div class=\"table_dateCount\">\n                        <template>\n                          <el-table\n                            :data=\"dateCountData\"\n                            style=\"width: 100%\"\n                            row-style=\"height:0\"\n                            cell-style=\"padding:5px\"\n                            stripe\n                            show-summary\n                            border\n                            :span-method=\" objectSpanMethod\">\n                            <el-table-column\n                              prop=\"area\"\n                              label=\"区域\"\n                              width=\"100\"\n                              align=\"center\">\n                            </el-table-column>\n                            <el-table-column\n                              prop=\"city\"\n                              label=\"地市\"\n                              width=\"100\"\n                              align=\"center\">\n                            </el-table-column>\n                            <el-table-column  label=\"专业\" align=\"center\">\n                              <el-table-column\n                                prop=\"transmission\"\n                                label=\"传输\"\n                                minwidth\n                                align=\"center\">\n                              </el-table-column>\n                              <el-table-column\n                                prop=\"dynamics\"\n                                label=\"动力\"\n                                minwidth\n                                align=\"center\">\n                              </el-table-column>\n                              <el-table-column\n                                prop=\"exchange\"\n                                label=\"交换\"\n                                minwidth\n                                align=\"center\">\n                              </el-table-column>\n                              <el-table-column\n                                prop=\"AN\"\n                                label=\"接入网\"\n                                minwidth\n                                align=\"center\">\n                              </el-table-column>\n                              <el-table-column\n                                prop=\"wireless\"\n                                label=\"无线\"\n                                minwidth\n                                align=\"center\">\n                              </el-table-column>\n                            </el-table-column>\n                            <el-table-column\n                              prop=\"sum\"\n                              label=\"合计\"\n                              minwidth\n                              align=\"center\">\n                            </el-table-column>\n                          </el-table>\n                        </template>\n                      </div>\n                    </el-col>\n                  </el-row>\n                  <a href=\"#top\"><h3 id=\"quality\">二、  全省故障工单处理质量情况分析</h3></a>\n                  <el-row>\n                    <el-col :span=\"24\">\n                      <div id=\"chart_IntimeRate\" style=\"height: 400px; border: 1px solid; margin-bottom: 10px\"></div>\n                      <div id=\"chart_AverageTime\" style=\"height: 400px; border: 1px solid; margin-bottom: 10px\"></div>\n                      <div id=\"chart_Over48Rate\" style=\"height: 400px; border: 1px solid\"></div>\n                      <div class=\"table_dateQuality\">\n                        <template>\n                          <el-table\n                            :data=\"dateQualityData\"\n                            style=\"width: 100%\"\n                            row-style=\"height:0\"\n                            cell-style=\"padding:5px\"\n                            stripe\n                            :summary-method=\"getAverage\"\n                            show-summary\n                            border\n                            :span-method=\" objectSpanMethod\">\n                            <el-table-column\n                              prop=\"area\"\n                              label=\"区域\"\n                              width=\"100\"\n                              align=\"center\">\n                            </el-table-column>\n                            <el-table-column\n                              prop=\"city\"\n                              label=\"地市\"\n                              width=\"100\"\n                              align=\"center\">\n                            </el-table-column>\n                            <el-table-column\n                              prop=\"SignRate\"\n                              label=\"签单及时率（%）\"\n                              minwidth\n                              align=\"center\">\n                            </el-table-column>\n                            <el-table-column\n                              prop=\"IntimeRate\"\n                              label=\"故障处理及时率（%）\"\n                              minwidth\n                              align=\"center\">\n                            </el-table-column>\n                            <el-table-column\n                              prop=\"AverageTime\"\n                              label=\"平均处理时长（小时）\"\n                              minwidth\n                              align=\"center\">\n                            </el-table-column>\n                            <el-table-column\n                              prop=\"Over48Rate\"\n                              label=\"超过48小时工单占比(%)\"\n                              minwidth\n                              align=\"center\">\n                            </el-table-column>\n                          </el-table>\n                        </template>\n                      </div>\n                    </el-col>\n                  </el-row>\n                  <a href=\"#top\"><h3 id=\"analysis\">三、  全省网络故障单原因分析</h3></a>\n                  <el-row>\n                    <el-col :span=\"24\">\n                      <div id=\"chart_dateAnalysis\" style=\"height: 400px; border: 1px solid; margin-bottom: 10px\"></div>\n                      <div id=\"chart_linePower\" style=\"height: 400px; border: 1px solid; margin-bottom: 10px\"></div>\n                      <div class=\"table_dateAnalysis\">\n                        <template>\n                          <el-table\n                            :data=\"dateAnalysisData\"\n                            style=\"width: 100%\"\n                            row-style=\"height:0\"\n                            cell-style=\"padding:5px\"\n                            stripe\n                            show-summary\n                            border\n                            :span-method=\" objectSpanMethod\">\n                            <el-table-column\n                              prop=\"area\"\n                              label=\"区域\"\n                              width=\"100\"\n                              align=\"center\">\n                            </el-table-column>\n                            <el-table-column\n                              prop=\"city\"\n                              label=\"地市\"\n                              width=\"100\"\n                              align=\"center\">\n                            </el-table-column>\n                            <el-table-column\n                              prop=\"line_amount\"\n                              label=\"线路（张）\"\n                              minwidth\n                              align=\"center\">\n                            </el-table-column>\n                            <el-table-column\n                              prop=\"power_amount\"\n                              label=\"停电（张）\"\n                              minwidth\n                              align=\"center\">\n                            </el-table-column>\n                            <el-table-column\n                              prop=\"equipment_amount\"\n                              label=\"设备（张）\"\n                              minwidth\n                              align=\"center\">\n                            </el-table-column>\n                            <el-table-column\n                              prop=\"environment_amount\"\n                              label=\"动环(张)\"\n                              minwidth\n                              align=\"center\">\n                            </el-table-column>\n                            <el-table-column\n                              prop=\"other_amount\"\n                              label=\"其他(张)\"\n                              minwidth\n                              align=\"center\">\n                            </el-table-column>\n                          </el-table>\n                        </template>\n                      </div>\n                      <div id=\"chart_dateProcesstime\" style=\"height: 400px; border: 1px solid; margin-bottom: 10px\"></div>\n                      <div class=\"table_dateProcesstime\">\n                        <template>\n                          <el-table\n                            :data=\"dateProcesstimeData\"\n                            style=\"width: 100%\"\n                            row-style=\"height:0\"\n                            cell-style=\"padding:5px\"\n                            stripe\n                            :summary-method=\"getAverage\"\n                            show-summary\n                            border\n                            :span-method=\" objectSpanMethod\">\n                            <el-table-column\n                              prop=\"area\"\n                              label=\"区域\"\n                              width=\"100\"\n                              align=\"center\">\n                            </el-table-column>\n                            <el-table-column\n                              prop=\"city\"\n                              label=\"地市\"\n                              width=\"100\"\n                              align=\"center\">\n                            </el-table-column>\n                            <el-table-column\n                              prop=\"line_time\"\n                              label=\"线路故障平均处理时长（小时）\"\n                              minwidth\n                              align=\"center\">\n                            </el-table-column>\n                            <el-table-column\n                              prop=\"power_time\"\n                              label=\"停电故障平均处理时长（小时）\"\n                              minwidth\n                              align=\"center\">\n                            </el-table-column>\n                            <el-table-column\n                              prop=\"equipment_time\"\n                              label=\"设备故障平均处理时长（小时）\"\n                              minwidth\n                              align=\"center\">\n                            </el-table-column>\n                            <el-table-column\n                              prop=\"environment_time\"\n                              label=\"动环故障平均处理时长（小时）\"\n                              minwidth\n                              align=\"center\">\n                            </el-table-column>\n                            <el-table-column\n                              prop=\"other_time\"\n                              label=\"其他故障平均处理时长（小时）\"\n                              minwidth\n                              align=\"center\">\n                            </el-table-column>\n                          </el-table>\n                        </template>\n                      </div>\n                    </el-col>\n                  </el-row>\n                </div>\n            </el-main>\n        </el-container>\n\n    </div>\n</template>\n\n<script>\nexport default {\n  data () {\n    return {\n      dateCountData: [],\n      testdata: {},\n      dateQualityData: [],\n      dateAnalysisData: [],\n      dateProcesstimeData: [],\n      valueDate: ['2018-01-01', '2018-03-31'],\n      link: 'http://132.96.194.30:8078/report/'\n    }\n  },\n  created () {\n    this.testdata['珠1'] = [0, 4]\n    this.testdata['珠2'] = [4, 4]\n    this.testdata['粤东'] = [8, 4]\n    this.testdata['粤西'] = [12, 4]\n    this.testdata['粤北'] = [16, 5]\n  },\n  computed: {\n    myBegin_datetime () {\n      return this.valueDate[0]\n    },\n    myEnd_datetime () {\n      return this.valueDate[1]\n    }\n  },\n  methods: {\n    table_dateCount () { // 表1\n      this.$http({\n        method: 'get',\n        url: this.link + 'amount/' + this.myBegin_datetime + '/' + this.myEnd_datetime + '/'\n        /* data: {\n          'statisticsType': 5,\n          'begin_datetime': this.myBegin_datetime,\n          'end_datetime': this.myEnd_datetime,\n          'target': 'table'\n        } */\n      }).then(response => {\n        if (response.data.status) {\n          this.dateCountData = response.data.result\n        }\n      }).catch(error => {\n        console.log(error)\n      })\n    },\n    objectSpanMethod ({row, column, rowIndex, columnIndex}) { // 合并列\n      if (columnIndex === 0) {\n        if (rowIndex === this.testdata[row.area][0]) {\n          return { rowspan: this.testdata[row.area][1], colspan: 1 }\n        } else {\n          return { rowspan: 0, colspan: 0 }\n        }\n      }\n    },\n    draw_dateCount () { // 图1\n      this.$http({\n        method: 'get',\n        url: this.link + 'amount/' + this.myBegin_datetime + '/' + this.myEnd_datetime + '/'\n      }).then(response => {\n        if (response.data.status) {\n          var cityList = []\n          var transmissionValueList = []\n          var dynamicsValueList = []\n          var exchangeValueList = []\n          var ANValueList = []\n          var wirelessValueList = []\n          var data = response.data.result\n          var l = response.data.result.length\n          for (var i = 0; i < l; i++) {\n            cityList.push(data[i]['city'])\n            transmissionValueList.push(data[i]['transmission'])\n            dynamicsValueList.push(data[i]['dynamics'])\n            exchangeValueList.push(data[i]['exchange'])\n            ANValueList.push(data[i]['AN'])\n            wirelessValueList.push(data[i]['wireless'])\n          }\n          let myChart = this.$echarts.init(document.getElementById('chart_dateCount'))\n          myChart.setOption({\n            color: ['#5b9cd6', '#ed7d31', '#a6a6a6', '#ffbf01', '#4473c5'],\n            title: {\n              text: ''\n            },\n            tooltip: {\n              trigger: 'axis',\n              axisPointer: { // 坐标轴指示器，坐标轴触发有效\n                type: 'shadow' // 默认为直线，可选为：'line' | 'shadow'\n              }\n            },\n            legend: {\n              data: ['传输', '动力', '交换', '接入网', '无线']\n            },\n            grid: {\n              left: '3%',\n              right: '4%',\n              bottom: '3%',\n              containLabel: true\n            },\n            yAxis: {\n              type: 'value',\n              height: 600\n            },\n            xAxis: {\n              type: 'category',\n              data: cityList\n            },\n            series: [\n              {\n                name: '传输',\n                type: 'bar',\n                stack: '总量',\n                label: {\n                  normal: {\n                    show: false,\n                    position: 'insideRight'\n                  }\n                },\n                data: transmissionValueList\n              },\n              {\n                name: '动力',\n                type: 'bar',\n                stack: '总量',\n                label: {\n                  normal: {\n                    show: false,\n                    position: 'insideRight'\n                  }\n                },\n                data: dynamicsValueList\n              },\n              {\n                name: '交换',\n                type: 'bar',\n                stack: '总量',\n                label: {\n                  normal: {\n                    show: false,\n                    position: 'insideRight'\n                  }\n                },\n                data: exchangeValueList\n              },\n              {\n                name: '接入网',\n                type: 'bar',\n                stack: '总量',\n                label: {\n                  normal: {\n                    show: false,\n                    position: 'insideRight'\n                  }\n                },\n                data: ANValueList\n              },\n              {\n                name: '无线',\n                type: 'bar',\n                stack: '总量',\n                label: {\n                  normal: {\n                    show: false,\n                    position: 'insideRight'\n                  }\n                },\n                data: wirelessValueList\n              }\n            ],\n            animation: false\n          })\n          setTimeout(() => {\n            var imginfo = myChart.getDataURL()\n            this.$http({\n              method: 'post',\n              url: this.link + 'image',\n              data: {\n                type: 'quarter',\n                beginDate: this.myBegin_datetime,\n                endDate: this.myEnd_datetime,\n                quarterly_amount: imginfo\n              }\n            }).then(response => {\n            })\n          }, 10)\n        }\n      }).catch(error => {\n        console.log(error)\n      })\n    },\n    table_dateQuality () { // 表二\n      this.$http({\n        method: 'get',\n        // url: 'http://132.96.194.30:8078/report/quality/',\n        url: this.link + 'quality/' + this.myBegin_datetime + '/' + this.myEnd_datetime + '/'\n        /* data: {\n          'statisticsType': 5,\n          'begin_datetime': this.myBegin_datetime,\n          'end_datetime': this.myEnd_datetime\n        } */\n      }).then(response => {\n        if (response.data.status) {\n          this.dateQualityData = response.data.result\n        }\n      }).catch(error => {\n        console.log(error)\n      })\n    },\n    getAverage (param) {\n      const { columns, data } = param\n      const sums = []\n      const average = []\n      columns.forEach((column, index) => {\n        if (index === 0) {\n          average[index] = '平均值'\n          return\n        }\n        const values = data.map(item => Number(item[column.property]))\n        if (!values.every(value => isNaN(value))) {\n          sums[index] = values.reduce((prev, curr) => {\n            const value = Number(curr)\n            if (!isNaN(value)) {\n              return prev + curr\n            } else {\n              return prev\n            }\n          }, 0)\n          sums[index] += ' '\n          average[index] = sums[index] / values.length\n          average[index] = average[index].toFixed(2)\n        } else {\n          average[index] = ''\n        }\n      })\n\n      return average\n    },\n    draw_dateIntimeRate () {\n      this.$http({\n        method: 'get',\n        url: this.link + 'quality/' + this.myBegin_datetime + '/' + this.myEnd_datetime + '/'\n      }).then(response => { // this.chart_IntimeRate = response.data.result\n        if (response.data.status) {\n          var cityList = []\n          var valueList = []\n          var data = response.data.result\n          var l = response.data.result.length\n          for (var i = 0; i < l; i++) {\n            cityList.push(data[i]['city'])\n            valueList.push(data[i]['IntimeRate'])\n          }\n          let myChart = this.$echarts.init(document.getElementById('chart_IntimeRate'))\n          myChart.setOption({\n            color: ['#5b9cd6'],\n            title: {\n              text: '处理及时率'\n            },\n            tooltip: {\n              trigger: 'axis',\n              axisPointer: { // 坐标轴指示器，坐标轴触发有效\n                type: 'shadow' // 默认为直线，可选为：'line' | 'shadow'\n              }\n            },\n            xAxis: {\n              type: 'category',\n              data: cityList\n            },\n            yAxis: {\n              type: 'value'\n            },\n            series: [{\n              data: valueList,\n              type: 'bar'\n            }],\n            animation: false\n          })\n          setTimeout(() => {\n            var imginfo = myChart.getDataURL()\n            this.$http({\n              method: 'post',\n              url: this.link + 'image',\n              data: {\n                type: 'quarter',\n                beginDate: this.myBegin_datetime,\n                endDate: this.myEnd_datetime,\n                quarterly_intime: imginfo\n              }\n            }).then(response => {\n            })\n          }, 10)\n        }\n      }).catch(error => {\n        console.log(error)\n      })\n    },\n    draw_dateAverageTime () {\n      this.$http({\n        method: 'get',\n        url: this.link + 'quality/' + this.myBegin_datetime + '/' + this.myEnd_datetime + '/'\n      }).then(response => { // this.chart_IntimeRate = response.data.result\n        if (response.data.status) {\n          var cityList = []\n          var valueList = []\n          var data = response.data.result\n          var l = response.data.result.length\n          for (var i = 0; i < l; i++) {\n            cityList.push(data[i]['city'])\n            valueList.push(data[i]['AverageTime'])\n          }\n          let myChart = this.$echarts.init(document.getElementById('chart_AverageTime'))\n          myChart.setOption({\n            color: ['#5b9cd6'],\n            title: {\n              text: '平均处理时长'\n            },\n            tooltip: {\n              trigger: 'axis',\n              axisPointer: { // 坐标轴指示器，坐标轴触发有效\n                type: 'shadow' // 默认为直线，可选为：'line' | 'shadow'\n              }\n            },\n            xAxis: {\n              type: 'category',\n              data: cityList\n            },\n            yAxis: {\n              type: 'value'\n            },\n            series: [{\n              data: valueList,\n              type: 'bar'\n            }],\n            animation: false\n          })\n          setTimeout(() => {\n            var imginfo = myChart.getDataURL()\n            this.$http({\n              method: 'post',\n              url: this.link + 'image',\n              data: {\n                type: 'quarter',\n                beginDate: this.myBegin_datetime,\n                endDate: this.myEnd_datetime,\n                quarterly_dealtime: imginfo\n              }\n            }).then(response => {\n            })\n          }, 10)\n        }\n      }).catch(error => {\n        console.log(error)\n      })\n    },\n    draw_dateOver48Rate () {\n      this.$http({\n        method: 'get',\n        url: this.link + 'quality/' + this.myBegin_datetime + '/' + this.myEnd_datetime + '/'\n      }).then(response => { // this.chart_IntimeRate = response.data.result\n        if (response.data.status) {\n          var cityList = []\n          var valueList = []\n          var data = response.data.result\n          var l = response.data.result.length\n          for (var i = 0; i < l; i++) {\n            cityList.push(data[i]['city'])\n            valueList.push(data[i]['Over48Rate'])\n          }\n          let myChart = this.$echarts.init(document.getElementById('chart_Over48Rate'))\n          myChart.setOption({\n            color: ['#5b9cd6'],\n            title: {\n              text: '超过48小时工单占比'\n            },\n            tooltip: {\n              trigger: 'axis',\n              axisPointer: { // 坐标轴指示器，坐标轴触发有效\n                type: 'shadow' // 默认为直线，可选为：'line' | 'shadow'\n              }\n            },\n            xAxis: {\n              type: 'category',\n              data: cityList\n            },\n            yAxis: {\n              type: 'value'\n            },\n            series: [{\n              data: valueList,\n              type: 'bar'\n            }],\n            animation: false\n          })\n          setTimeout(() => {\n            var imginfo = myChart.getDataURL()\n            this.$http({\n              method: 'post',\n              url: this.link + 'image',\n              data: {\n                type: 'quarter',\n                beginDate: this.myBegin_datetime,\n                endDate: this.myEnd_datetime,\n                quarterly_over48: imginfo\n              }\n            }).then(response => {\n            })\n          }, 10)\n        }\n      }).catch(error => {\n        console.log(error)\n      })\n    },\n    table_dateAnalysis () {\n      this.$http({\n        method: 'get',\n        url: this.link + 'specific/' + this.myBegin_datetime + '/' + this.myEnd_datetime + '/'\n      }).then(response => {\n        if (response.data.status) {\n          this.dateAnalysisData = response.data.result\n        }\n      }).catch(error => {\n        console.log(error)\n      })\n    },\n    table_dateProcesstime () {\n      this.$http({\n        method: 'get',\n        url: this.link + 'specific/' + this.myBegin_datetime + '/' + this.myEnd_datetime + '/'\n      }).then(response => {\n        if (response.data.status) {\n          this.dateProcesstimeData = response.data.result\n        }\n      }).catch(error => {\n        console.log(error)\n      })\n    },\n    draw_dateAnalysis () {\n      this.$http({\n        method: 'get',\n        url: this.link + 'specific/' + this.myBegin_datetime + '/' + this.myEnd_datetime + '/'\n      }).then(response => {\n        if (response.data.status) {\n          var cityList = []\n          var lineValueList = []\n          var powerValueList = []\n          var equipmentValueList = []\n          var environmentValueList = []\n          var otherValueList = []\n          var data = response.data.result\n          var l = response.data.result.length\n          for (var i = 0; i < l; i++) {\n            cityList.push(data[i]['city'])\n            lineValueList.push(data[i]['line_amount'])\n            powerValueList.push(data[i]['power_amount'])\n            equipmentValueList.push(data[i]['equipment_amount'])\n            environmentValueList.push(data[i]['environment_amount'])\n            otherValueList.push(data[i]['other_amount'])\n          }\n          let myChart = this.$echarts.init(document.getElementById('chart_dateAnalysis'))\n          myChart.setOption({\n            tooltip: {\n              trigger: 'axis'\n            },\n            legend: {\n              data: ['线路', '停电', '设备', '动环', '其他']\n            },\n            grid: {\n              left: '3%',\n              right: '4%',\n              bottom: '3%',\n              containLabel: true\n            },\n            toolbox: {\n              feature: {\n                saveAsImage: {}\n              }\n            },\n            xAxis: {\n              type: 'category',\n              boundaryGap: false,\n              data: cityList\n            },\n            yAxis: {\n              type: 'value'\n            },\n            series: [\n              {\n                name: '线路',\n                type: 'line',\n                stack: '总量',\n                data: lineValueList\n              },\n              {\n                name: '停电',\n                type: 'line',\n                stack: '总量',\n                data: powerValueList\n              },\n              {\n                name: '设备',\n                type: 'line',\n                stack: '总量',\n                data: equipmentValueList\n              },\n              {\n                name: '动环',\n                type: 'line',\n                stack: '总量',\n                data: environmentValueList\n              },\n              {\n                name: '其他',\n                type: 'line',\n                stack: '总量',\n                data: otherValueList\n              }\n            ],\n            animation: false\n          })\n          setTimeout(() => {\n            var imginfo = myChart.getDataURL()\n            this.$http({\n              method: 'post',\n              url: this.link + 'image',\n              data: {\n                type: 'quarter',\n                beginDate: this.myBegin_datetime,\n                endDate: this.myEnd_datetime,\n                quarterly_reason_amount: imginfo\n              }\n            }).then(response => {\n            })\n          }, 10)\n        }\n      }).catch(error => {\n        console.log(error)\n      })\n    },\n    draw_dateLinePower () {\n      this.$http({\n        method: 'get',\n        url: this.link + 'specific/' + this.myBegin_datetime + '/' + this.myEnd_datetime + '/'\n      }).then(response => {\n        if (response.data.status) {\n          var cityList = []\n          var lineValueList = []\n          var powerValueList = []\n          var data = response.data.result\n          var l = response.data.result.length\n          for (var i = 0; i < l; i++) {\n            cityList.push(data[i]['city'])\n            lineValueList.push(data[i]['line_amount'])\n            powerValueList.push(data[i]['power_amount'] * (-1))\n          }\n          let myChart = this.$echarts.init(document.getElementById('chart_linePower'))\n          myChart.setOption({\n            color: ['#ed7d31', '#5c9ad5'],\n            title: {\n              text: '线路及停电故障单量'\n            },\n            tooltip: {\n              trigger: 'axis',\n              axisPointer: { // 坐标轴指示器，坐标轴触发有效\n                type: 'shadow' // 默认为直线，可选为：'line' | 'shadow'\n              }\n            },\n            legend: {\n              data: ['线路', '停电']\n            },\n            grid: {\n              left: '3%',\n              right: '4%',\n              bottom: '3%',\n              containLabel: true\n            },\n            xAxis: [\n              {\n                type: 'value',\n                axisLabel: {\n                  formatter: function (value) {\n                    return Math.abs(value) // 显示的数值都取绝对值\n                  }\n                }\n              }\n            ],\n            yAxis: [\n              {\n                type: 'category',\n                axisTick: {show: false},\n                data: cityList,\n                axisLabel: {\n                  interval: 0 //  横轴信息全部显示\n                }\n                // max: 20\n              }\n            ],\n            series: [\n              {\n                name: '线路',\n                type: 'bar',\n                stack: '总量',\n                // barCategoryGap: '80%',\n                label: {\n                  normal: {\n                    show: true\n                  }\n                },\n                data: lineValueList\n              },\n              {\n                name: '停电',\n                type: 'bar',\n                stack: '总量',\n                // barCategoryGap: '80%',\n                label: {\n                  normal: {\n                    show: true,\n                    formatter: function (value) {\n                      if (value.data < 0) {\n                        return -value.data\n                      }\n                    }\n                  }\n                },\n                data: powerValueList\n              }\n            ],\n            animation: false\n          })\n          setTimeout(() => {\n            var imginfo = myChart.getDataURL()\n            this.$http({\n              method: 'post',\n              url: this.link + 'image',\n              data: {\n                type: 'quarter',\n                beginDate: this.myBegin_datetime,\n                endDate: this.myEnd_datetime,\n                quarterly_specific_amount: imginfo\n              }\n            }).then(response => {\n            })\n          }, 10)\n        }\n      }).catch(error => {\n        console.log(error)\n      })\n    },\n    draw_dateProcesstime () {\n      this.$http({\n        method: 'get',\n        url: this.link + 'specific/' + this.myBegin_datetime + '/' + this.myEnd_datetime + '/'\n      }).then(response => {\n        if (response.data.status) {\n          var cityList = []\n          var lineTimeValueList = []\n          var powerTimeValueList = []\n          var data = response.data.result\n          var l = response.data.result.length\n          for (var i = 0; i < l; i++) {\n            cityList.push(data[i]['city'])\n            lineTimeValueList.push(data[i]['line_time'])\n            powerTimeValueList.push(data[i]['power_time'] * (-1))\n          }\n          let myChart = this.$echarts.init(document.getElementById('chart_dateProcesstime'))\n          myChart.setOption({\n            color: ['#ed7d31', '#5c9ad5'],\n            title: {\n              text: '线路及停电故障处理时长'\n            },\n            tooltip: {\n              trigger: 'axis',\n              axisPointer: { // 坐标轴指示器，坐标轴触发有效\n                type: 'shadow' // 默认为直线，可选为：'line' | 'shadow'\n              }\n            },\n            legend: {\n              data: ['线路故障处理时长（小时）', '停电故障处理时长（小时）']\n            },\n            grid: {\n              left: '3%',\n              right: '4%',\n              bottom: '3%',\n              containLabel: true\n            },\n            xAxis: [\n              {\n                type: 'value',\n                axisLabel: {\n                  formatter: function (value) {\n                    return Math.abs(value) // 显示的数值都取绝对值\n                  }\n                }\n              }\n            ],\n            yAxis: [\n              {\n                type: 'category',\n                axisTick: {show: false},\n                data: cityList,\n                axisLabel: {\n                  interval: 0 //  横轴信息全部显示\n                }\n              }\n            ],\n            series: [\n              {\n                name: '线路',\n                type: 'bar',\n                stack: '总量',\n                label: {\n                  normal: {\n                    show: true\n                  }\n                },\n                data: lineTimeValueList\n              },\n              {\n                name: '停电',\n                type: 'bar',\n                stack: '总量',\n                label: {\n                  normal: {\n                    show: true,\n                    formatter: function (value) {\n                      if (value.data < 0) {\n                        return -value.data\n                      }\n                    }\n                  }\n                },\n                data: powerTimeValueList\n              }\n            ],\n            animation: false\n          })\n          setTimeout(() => {\n            var imginfo = myChart.getDataURL()\n            this.$http({\n              method: 'post',\n              url: this.link + 'image',\n              data: {\n                type: 'quarter',\n                beginDate: this.myBegin_datetime,\n                endDate: this.myEnd_datetime,\n                quarterly_specific_dealtime: imginfo\n              }\n            }).then(response => {\n            })\n          }, 10)\n        }\n      }).catch(error => {\n        console.log(error)\n      })\n    },\n    DataFilter () {\n      this.table_dateCount()\n      this.draw_dateCount()\n      this.table_dateQuality()\n      this.draw_dateIntimeRate()\n      this.draw_dateAverageTime()\n      this.draw_dateOver48Rate()\n      this.table_dateAnalysis()\n      this.table_dateProcesstime()\n      this.draw_dateAnalysis()\n      this.draw_dateLinePower()\n      this.draw_dateProcesstime()\n    }\n  },\n  mounted () {\n    this.table_dateCount()\n    this.draw_dateCount()\n    this.table_dateQuality()\n    this.draw_dateIntimeRate()\n    this.draw_dateAverageTime()\n    this.draw_dateOver48Rate()\n    this.table_dateAnalysis()\n    this.table_dateProcesstime()\n    this.draw_dateAnalysis()\n    this.draw_dateLinePower()\n    this.draw_dateProcesstime()\n  }\n}\n</script>\n<style>\n  .el-header{\n        height: 180px;\n        color: rgb(110,110,110);\n        text-align: center;\n        line-height: 60px;\n        font: 28px/60px bold 微软雅黑;\n    }\n  .el-main {\n        /*background-color: #E9EEF3;*/\n        color: #333;\n    }\n  .main {\n      margin: 0 auto;\n      width: 90%;\n    }\n  .main h3{\n      font: 18px/20px bold 微软雅黑;\n      color: rgb(130,130,130);\n      text-align:left;\n    }\n  .table_dateCount,.table_dateQuality,.table_dateAnalysis,.table_dateProcesstime{\n    margin-top: 20px;\n  }\n  .el-table .cell{\n    line-height: 15px;\n  }\n  .el-form-item{\n    margin-bottom: -13px;\n  }\n  /*.el-form-item__content{*/\n    /*margin-left: -100px;*/\n    /*margin-right: 20px;*/\n  /*}*/\n  a:link,a:visited{\n    text-decoration:none;  /*超链接无下划线*/\n  }\n  a:hover{\n    text-decoration:none;  /*鼠标放上去有下划线*/\n  }\n  .el-table thead.is-group th {\n    background: #4473c5 !important;\n  }\n  /*.el-table th, .el-table tr {*/\n    /*background-color: #4473c5 !important;*/\n  /*}*/\n  .el-table thead,.el-table--border th, .el-table__fixed-right-patch{\n    color: #ffffff;\n    background-color: #4473c5 !important;\n  }\n  .el-table_2_column_10 is-center ,el-table_2_column_10 is-center is-leaf,el-table_1_column_1 is-center {\n    background-color: #4473c5 !important;\n    color: #ffffff !important;\n  }\n\n</style>\n\n\n\n// WEBPACK FOOTER //\n// src/components/User-defined.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('el-container',[_c('el-header',[_c('a',{attrs:{\"name\":\"top\"}}),_vm._v(\"广东电信故障工单管控通报\\n          \")]),_vm._v(\" \"),_c('span',{staticStyle:{\"text-align\":\"center\",\"color\":\"rgb(21,82,179)\",\"font-weight\":\"bold\"}},[_c('a',{attrs:{\"href\":\"#count\"}},[_vm._v(\"△全省网络故障单量情况统计\")]),_vm._v(\" \"),_c('a',{attrs:{\"href\":\"#quality\"}},[_vm._v(\"△全省故障工单处理质量情况分析\")]),_vm._v(\" \"),_c('a',{attrs:{\"href\":\"#analysis\"}},[_vm._v(\"△全省故障工单处理质量情况分析\")]),_vm._v(\" \"),_c('hr',{staticStyle:{\"height\":\"1px\",\"background-color\":\"rgb(21,82,179)\",\"border\":\"none\"}})]),_vm._v(\" \"),_c('div',{staticClass:\"time-filter\",staticStyle:{\"width\":\"600px\",\"margin\":\"0 auto\"}},[_c('div',{staticClass:\"block\",staticStyle:{\"margin\":\"0 auto\"}},[_c('el-form',{ref:\"form\",attrs:{\"model\":_vm.form,\"label-width\":\"80px\"}},[_c('el-row',{attrs:{\"gutter\":200}},[_c('el-col',{attrs:{\"span\":11}},[_c('el-form-item',[_c('el-date-picker',{attrs:{\"type\":\"daterange\",\"start-placeholder\":\"开始日期\",\"end-placeholder\":\"结束日期\",\"value-format\":\"yyyy-MM-dd\",\"default-time\":['00:00:00', '23:59:59']},model:{value:(_vm.valueDate),callback:function ($$v) {_vm.valueDate=$$v},expression:\"valueDate\"}})],1)],1),_vm._v(\" \"),_c('el-col',{attrs:{\"span\":5}},[_c('el-form-item',[_c('el-button',{attrs:{\"type\":\"primary\"},on:{\"click\":function($event){_vm.DataFilter()}}},[_vm._v(\"提交\")])],1)],1),_vm._v(\" \"),_c('el-col',{attrs:{\"span\":5}},[_c('el-form-item',[_c('a',{attrs:{\"href\":_vm.link +'docx/quarter/'+ this.myBegin_datetime + '/' + this.myEnd_datetime}},[_c('el-button',{attrs:{\"slot\":\"trigger\",\"type\":\"success\"},slot:\"trigger\"},[_vm._v(\"下载\")])],1)])],1)],1)],1)],1)]),_vm._v(\" \"),_c('el-main',[_c('div',{staticClass:\"main\"},[_c('a',{attrs:{\"href\":\"#top\"}},[_c('h3',{attrs:{\"id\":\"count\"}},[_vm._v(\"一、  全省网络故障单量情况统计\")])]),_vm._v(\" \"),_c('el-row',[_c('el-col',{attrs:{\"span\":24}},[_c('div',{staticStyle:{\"height\":\"400px\",\"border\":\"1px solid\",\"margin-bottom\":\"10px\"},attrs:{\"id\":\"chart_dateCount\"}}),_vm._v(\" \"),_c('div',{staticClass:\"table_dateCount\"},[[_c('el-table',{staticStyle:{\"width\":\"100%\"},attrs:{\"data\":_vm.dateCountData,\"row-style\":\"height:0\",\"cell-style\":\"padding:5px\",\"stripe\":\"\",\"show-summary\":\"\",\"border\":\"\",\"span-method\":_vm.objectSpanMethod}},[_c('el-table-column',{attrs:{\"prop\":\"area\",\"label\":\"区域\",\"width\":\"100\",\"align\":\"center\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"city\",\"label\":\"地市\",\"width\":\"100\",\"align\":\"center\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"label\":\"专业\",\"align\":\"center\"}},[_c('el-table-column',{attrs:{\"prop\":\"transmission\",\"label\":\"传输\",\"minwidth\":\"\",\"align\":\"center\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"dynamics\",\"label\":\"动力\",\"minwidth\":\"\",\"align\":\"center\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"exchange\",\"label\":\"交换\",\"minwidth\":\"\",\"align\":\"center\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"AN\",\"label\":\"接入网\",\"minwidth\":\"\",\"align\":\"center\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"wireless\",\"label\":\"无线\",\"minwidth\":\"\",\"align\":\"center\"}})],1),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"sum\",\"label\":\"合计\",\"minwidth\":\"\",\"align\":\"center\"}})],1)]],2)])],1),_vm._v(\" \"),_c('a',{attrs:{\"href\":\"#top\"}},[_c('h3',{attrs:{\"id\":\"quality\"}},[_vm._v(\"二、  全省故障工单处理质量情况分析\")])]),_vm._v(\" \"),_c('el-row',[_c('el-col',{attrs:{\"span\":24}},[_c('div',{staticStyle:{\"height\":\"400px\",\"border\":\"1px solid\",\"margin-bottom\":\"10px\"},attrs:{\"id\":\"chart_IntimeRate\"}}),_vm._v(\" \"),_c('div',{staticStyle:{\"height\":\"400px\",\"border\":\"1px solid\",\"margin-bottom\":\"10px\"},attrs:{\"id\":\"chart_AverageTime\"}}),_vm._v(\" \"),_c('div',{staticStyle:{\"height\":\"400px\",\"border\":\"1px solid\"},attrs:{\"id\":\"chart_Over48Rate\"}}),_vm._v(\" \"),_c('div',{staticClass:\"table_dateQuality\"},[[_c('el-table',{staticStyle:{\"width\":\"100%\"},attrs:{\"data\":_vm.dateQualityData,\"row-style\":\"height:0\",\"cell-style\":\"padding:5px\",\"stripe\":\"\",\"summary-method\":_vm.getAverage,\"show-summary\":\"\",\"border\":\"\",\"span-method\":_vm.objectSpanMethod}},[_c('el-table-column',{attrs:{\"prop\":\"area\",\"label\":\"区域\",\"width\":\"100\",\"align\":\"center\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"city\",\"label\":\"地市\",\"width\":\"100\",\"align\":\"center\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"SignRate\",\"label\":\"签单及时率（%）\",\"minwidth\":\"\",\"align\":\"center\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"IntimeRate\",\"label\":\"故障处理及时率（%）\",\"minwidth\":\"\",\"align\":\"center\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"AverageTime\",\"label\":\"平均处理时长（小时）\",\"minwidth\":\"\",\"align\":\"center\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"Over48Rate\",\"label\":\"超过48小时工单占比(%)\",\"minwidth\":\"\",\"align\":\"center\"}})],1)]],2)])],1),_vm._v(\" \"),_c('a',{attrs:{\"href\":\"#top\"}},[_c('h3',{attrs:{\"id\":\"analysis\"}},[_vm._v(\"三、  全省网络故障单原因分析\")])]),_vm._v(\" \"),_c('el-row',[_c('el-col',{attrs:{\"span\":24}},[_c('div',{staticStyle:{\"height\":\"400px\",\"border\":\"1px solid\",\"margin-bottom\":\"10px\"},attrs:{\"id\":\"chart_dateAnalysis\"}}),_vm._v(\" \"),_c('div',{staticStyle:{\"height\":\"400px\",\"border\":\"1px solid\",\"margin-bottom\":\"10px\"},attrs:{\"id\":\"chart_linePower\"}}),_vm._v(\" \"),_c('div',{staticClass:\"table_dateAnalysis\"},[[_c('el-table',{staticStyle:{\"width\":\"100%\"},attrs:{\"data\":_vm.dateAnalysisData,\"row-style\":\"height:0\",\"cell-style\":\"padding:5px\",\"stripe\":\"\",\"show-summary\":\"\",\"border\":\"\",\"span-method\":_vm.objectSpanMethod}},[_c('el-table-column',{attrs:{\"prop\":\"area\",\"label\":\"区域\",\"width\":\"100\",\"align\":\"center\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"city\",\"label\":\"地市\",\"width\":\"100\",\"align\":\"center\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"line_amount\",\"label\":\"线路（张）\",\"minwidth\":\"\",\"align\":\"center\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"power_amount\",\"label\":\"停电（张）\",\"minwidth\":\"\",\"align\":\"center\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"equipment_amount\",\"label\":\"设备（张）\",\"minwidth\":\"\",\"align\":\"center\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"environment_amount\",\"label\":\"动环(张)\",\"minwidth\":\"\",\"align\":\"center\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"other_amount\",\"label\":\"其他(张)\",\"minwidth\":\"\",\"align\":\"center\"}})],1)]],2),_vm._v(\" \"),_c('div',{staticStyle:{\"height\":\"400px\",\"border\":\"1px solid\",\"margin-bottom\":\"10px\"},attrs:{\"id\":\"chart_dateProcesstime\"}}),_vm._v(\" \"),_c('div',{staticClass:\"table_dateProcesstime\"},[[_c('el-table',{staticStyle:{\"width\":\"100%\"},attrs:{\"data\":_vm.dateProcesstimeData,\"row-style\":\"height:0\",\"cell-style\":\"padding:5px\",\"stripe\":\"\",\"summary-method\":_vm.getAverage,\"show-summary\":\"\",\"border\":\"\",\"span-method\":_vm.objectSpanMethod}},[_c('el-table-column',{attrs:{\"prop\":\"area\",\"label\":\"区域\",\"width\":\"100\",\"align\":\"center\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"city\",\"label\":\"地市\",\"width\":\"100\",\"align\":\"center\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"line_time\",\"label\":\"线路故障平均处理时长（小时）\",\"minwidth\":\"\",\"align\":\"center\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"power_time\",\"label\":\"停电故障平均处理时长（小时）\",\"minwidth\":\"\",\"align\":\"center\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"equipment_time\",\"label\":\"设备故障平均处理时长（小时）\",\"minwidth\":\"\",\"align\":\"center\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"environment_time\",\"label\":\"动环故障平均处理时长（小时）\",\"minwidth\":\"\",\"align\":\"center\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"other_time\",\"label\":\"其他故障平均处理时长（小时）\",\"minwidth\":\"\",\"align\":\"center\"}})],1)]],2)])],1)],1)])],1)],1)}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-802f61d0\",\"hasScoped\":false,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/components/User-defined.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-802f61d0\\\",\\\"scoped\\\":false,\\\"hasInlineConfig\\\":false}!../../node_modules/vue-loader/lib/selector?type=styles&index=0!./User-defined.vue\")\n}\nvar normalizeComponent = require(\"!../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./User-defined.vue\"\nimport __vue_script__ from \"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./User-defined.vue\"\n/* template */\nimport __vue_template__ from \"!!../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-802f61d0\\\",\\\"hasScoped\\\":false,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../node_modules/vue-loader/lib/selector?type=template&index=0!./User-defined.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/User-defined.vue\n// module id = null\n// module chunks = "],"sourceRoot":""}