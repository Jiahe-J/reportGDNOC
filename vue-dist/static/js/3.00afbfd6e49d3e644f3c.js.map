{"version":3,"sources":["webpack:///src/components/Monthly.vue","webpack:///./src/components/Monthly.vue?8ce3","webpack:///./src/components/Monthly.vue"],"names":["Monthly","data","monthCountData","testdata","monthQualityData","monthAnalysisData","monthProcesstimeData","valueMonth","created","this","computed","myYear","getFullYear","myMonth","getMonth","methods","table_monthCount","_this","$http","method","url","statisticsType","year","month","target","then","response","status","result","catch","error","console","log","objectSpanMethod","_ref","row","rowIndex","column","columnIndex","area","rowspan","colspan","draw_monthCount","_this2","cityList","transmissionValueList","dynamicsValueList","exchangeValueList","ANValueList","wirelessValueList","l","length","i","push","$echarts","init","document","getElementById","setOption","title","text","tooltip","trigger","axisPointer","type","legend","grid","left","right","bottom","containLabel","yAxis","height","xAxis","series","name","stack","label","normal","show","position","table_monthQuality","_this3","getAverage","param","columns","sums","average","forEach","index","values","map","item","Number","property","every","value","isNaN","reduce","prev","curr","toFixed","draw_monthIntimeRate","_this4","valueList","draw_monthAverageTime","_this5","draw_monthOver48Rate","_this6","table_monthAnalysis","_this7","table_monthProcesstime","_this8","draw_monthAnalysis","_this9","lineValueList","powerValueList","equipmentValueList","environmentValueList","otherValueList","toolbox","feature","saveAsImage","boundaryGap","draw_monthLinePower","_this10","axisLabel","formatter","Math","abs","axisTick","draw_monthProcesstime","_this11","lineTimeValueList","powerTimeValueList","DataFilter","mounted","components_Monthly","render","_vm","_h","$createElement","_c","_self","_v","staticStyle","text-align","color","font-weight","background-color","border","staticClass","width","margin","ref","attrs","model","form","label-width","gutter","span","clearable","placeholder","callback","$$v","expression","on","click","$event","id","show-summary","span-method","prop","align","minwidth","summary-method","staticRenderFns","Component","__webpack_require__","normalizeComponent","ssrContext","__webpack_exports__"],"mappings":"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","file":"static/js/3.00afbfd6e49d3e644f3c.js","sourcesContent":["<template>\n  <div>\n        <el-container>\n            <el-header>\n            广东电信故障工单月度管控通报\n            </el-header>\n            <span style=\"text-align:center;color:rgb(21,82,179);font-weight:bold\">\n              △全省网络故障单量情况统计\n              △全省故障工单处理质量情况分析\n              △全省故障工单处理质量情况分析\n            <hr style=\"height:1px; background-color:rgb(21,82,179);border:none\"/>\n            </span>\n          <div class=\"time-filter\" style=\"width: 500px;margin: 0 auto\">\n            <div class=\"block\" style=\"margin: 0 auto\">\n              <el-form ref=\"form\"  :model=\"form\" label-width=\"80px\">\n                <el-row :gutter=\"10\">\n                  <el-col :span=\"11\">\n                    <el-form-item>\n                      <el-date-picker\n                        v-model=\"valueMonth\"\n                        clearable\n                        type=\"month\"\n                        placeholder=\"选择月\"\n                        >\n                      </el-date-picker>\n                    </el-form-item>\n                  </el-col>\n                  <el-col :span=\"2\">\n                    <el-form-item>\n                      <el-button type=\"primary\" @click=\"DataFilter()\" >提交</el-button>\n                    </el-form-item>\n                  </el-col>\n                </el-row>\n              </el-form>\n            </div>\n          </div>\n            <el-main>\n                <div class=\"main\">\n                    <h3>一、  全省网络故障单量情况统计</h3>\n                    <div class=\"count\">\n                        <div id=\"chart_monthCount\" style=\"width: 900px;height: 400px; border: 1px solid\"></div>\n                        <div class=\"table_monthCount\">\n                            <template>\n                              <el-table\n                                :data=\"monthCountData\"\n                                style=\"width: 700px\"\n                                show-summary\n                                border\n                                :span-method=\" objectSpanMethod\">\n                                <el-table-column\n                                  prop=\"area\"\n                                  label=\"区域\"\n                                  width=\"100\"\n                                  align=\"center\">\n                                </el-table-column>\n                                <el-table-column\n                                  prop=\"city\"\n                                  label=\"地市\"\n                                  width=\"100\"\n                                  align=\"center\">\n                                </el-table-column>\n                                <el-table-column  label=\"专业\" align=\"center\">\n                                    <el-table-column\n                                        prop=\"transmission\"\n                                        label=\"传输\"\n                                        minwidth\n                                        align=\"center\">\n                                    </el-table-column>\n                                    <el-table-column\n                                        prop=\"dynamics\"\n                                        label=\"动力\"\n                                        minwidth\n                                        align=\"center\">\n                                    </el-table-column>\n                                    <el-table-column\n                                        prop=\"exchange\"\n                                        label=\"交换\"\n                                        minwidth\n                                        align=\"center\">\n                                    </el-table-column>\n                                    <el-table-column\n                                        prop=\"AN\"\n                                        label=\"接入网\"\n                                        minwidth\n                                        align=\"center\">\n                                    </el-table-column>\n                                    <el-table-column\n                                        prop=\"wireless\"\n                                        label=\"无线\"\n                                        minwidth\n                                        align=\"center\">\n                                    </el-table-column>\n                                </el-table-column>\n                                <el-table-column\n                                  prop=\"sum\"\n                                  label=\"合计\"\n                                  minwidth\n                                  align=\"center\">\n                                </el-table-column>\n                              </el-table>\n                            </template>\n                        </div>\n                    </div>\n                    <h3>二、  全省故障工单处理质量情况分析</h3>\n                    <div class=\"quality\">\n                        <div id=\"chart_IntimeRate\" style=\"width: 900px;height: 400px; border: 1px solid\"></div>\n                        <div id=\"chart_AverageTime\" style=\"width: 900px;height: 400px; border: 1px solid\"></div>\n                        <div id=\"chart_Over48Rate\" style=\"width: 900px;height: 400px; border: 1px solid\"></div>\n                        <div class=\"table_monthQuality\">\n                          <template>\n                            <el-table\n                              :data=\"monthQualityData\"\n                              style=\"width: 700px\"\n                              :summary-method=\"getAverage\"\n                              show-summary\n                              border\n                              :span-method=\" objectSpanMethod\">\n                              <el-table-column\n                                prop=\"area\"\n                                label=\"区域\"\n                                width=\"100\"\n                                align=\"center\">\n                              </el-table-column>\n                              <el-table-column\n                                prop=\"city\"\n                                label=\"地市\"\n                                width=\"100\"\n                                align=\"center\">\n                              </el-table-column>\n                              <el-table-column\n                                prop=\"receive\"\n                                label=\"签单及时率（%）\"\n                                minwidth\n                                align=\"center\">\n                              </el-table-column>\n                              <el-table-column\n                                prop=\"IntimeRate\"\n                                label=\"故障处理及时率（%）\"\n                                minwidth\n                                align=\"center\">\n                              </el-table-column>\n                              <el-table-column\n                                  prop=\"AverageTime\"\n                                  label=\"平均处理时长（小时）\"\n                                  minwidth\n                                  align=\"center\">\n                              </el-table-column>\n                              <el-table-column\n                                  prop=\"Over48Rate\"\n                                  label=\"超过48小时工单占比(%)\"\n                                  minwidth\n                                  align=\"center\">\n                              </el-table-column>\n                            </el-table>\n                          </template>\n                        </div>\n                    </div>\n                    <h3>三、  全省网络故障单原因分析</h3>\n                    <div class=\"analysis\">\n                        <div id=\"chart_monthAnalysis\" style=\"width: 900px;height: 400px; border: 1px solid\"></div>\n                        <div id=\"chart_linePower\" style=\"width: 900px;height: 400px; border: 1px solid\"></div>\n                        <div class=\"table_monthAnalysis\">\n                          <template>\n                            <el-table\n                              :data=\"monthAnalysisData\"\n                              style=\"width: 700px\"\n                              show-summary\n                              border\n                              :span-method=\" objectSpanMethod\">\n                              <el-table-column\n                                prop=\"area\"\n                                label=\"区域\"\n                                width=\"100\"\n                                align=\"center\">\n                              </el-table-column>\n                              <el-table-column\n                                prop=\"city\"\n                                label=\"地市\"\n                                width=\"100\"\n                                align=\"center\">\n                              </el-table-column>\n                              <el-table-column\n                                prop=\"line_amount\"\n                                label=\"线路（张）\"\n                                minwidth\n                                align=\"center\">\n                              </el-table-column>\n                              <el-table-column\n                                prop=\"power_amount\"\n                                label=\"停电（张）\"\n                                minwidth\n                                align=\"center\">\n                              </el-table-column>\n                              <el-table-column\n                                prop=\"equipment_amount\"\n                                label=\"设备（张）\"\n                                minwidth\n                                align=\"center\">\n                              </el-table-column>\n                              <el-table-column\n                                prop=\"environment_amount\"\n                                label=\"动环(张)\"\n                                minwidth\n                                align=\"center\">\n                              </el-table-column>\n                              <el-table-column\n                                prop=\"other_amount\"\n                                label=\"其他(张)\"\n                                minwidth\n                                align=\"center\">\n                              </el-table-column>\n                            </el-table>\n                          </template>\n                        </div>\n                        <div id=\"chart_monthProcesstime\" style=\"width: 900px;height: 400px; border: 1px solid\"></div>\n                        <div class=\"table_monthProcesstime\">\n                          <template>\n                            <el-table\n                              :data=\"monthProcesstimeData\"\n                              style=\"width: 700px\"\n                              :summary-method=\"getAverage\"\n                              show-summary\n                              border\n                              :span-method=\" objectSpanMethod\">\n                              <el-table-column\n                                prop=\"area\"\n                                label=\"区域\"\n                                width=\"100\"\n                                align=\"center\">\n                              </el-table-column>\n                              <el-table-column\n                                prop=\"city\"\n                                label=\"地市\"\n                                width=\"100\"\n                                align=\"center\">\n                              </el-table-column>\n                              <el-table-column\n                                prop=\"line_time\"\n                                label=\"线路故障平均处理时长（小时）\"\n                                minwidth\n                                align=\"center\">\n                              </el-table-column>\n                              <el-table-column\n                                prop=\"power_time\"\n                                label=\"停电故障平均处理时长（小时）\"\n                                minwidth\n                                align=\"center\">\n                              </el-table-column>\n                              <el-table-column\n                                prop=\"equipment_time\"\n                                label=\"设备故障平均处理时长（小时）\"\n                                minwidth\n                                align=\"center\">\n                              </el-table-column>\n                              <el-table-column\n                                prop=\"environment_time\"\n                                label=\"动环故障平均处理时长（小时）\"\n                                minwidth\n                                align=\"center\">\n                              </el-table-column>\n                              <el-table-column\n                                prop=\"other_time\"\n                                label=\"其他故障平均处理时长（小时）\"\n                                minwidth\n                                align=\"center\">\n                              </el-table-column>\n                            </el-table>\n                          </template>\n                        </div>\n                    </div>\n                </div>\n            </el-main>\n        </el-container>\n\n    </div>\n</template>\n\n<script>\nexport default {\n  data () {\n    return {\n      monthCountData: [],\n      testdata: {},\n      monthQualityData: [],\n      monthAnalysisData: [],\n      monthProcesstimeData: [],\n      valueMonth: ''\n    }\n  },\n  created () {\n    this.testdata['珠1'] = [0, 4]\n    this.testdata['珠2'] = [4, 4]\n    this.testdata['粤东'] = [8, 4]\n    this.testdata['粤西'] = [12, 4]\n    this.testdata['粤北'] = [16, 5]\n  },\n  computed: {\n    myYear () {\n      return this.valueMonth.getFullYear()\n    },\n    myMonth () {\n      return this.valueMonth.getMonth() + 1\n    }\n  },\n  methods: {\n    table_monthCount () { // 表1\n      this.$http({\n        method: 'post',\n        url: 'http://132.96.194.30:8078/report/amount/',\n        data: {\n          'statisticsType': 3,\n          'year': this.myYear,\n          'month': this.myMonth,\n          'target': 'table'\n        }\n      }).then(response => {\n        if (response.data.status) {\n          this.monthCountData = response.data.result\n        }\n      }).catch(error => {\n        console.log(error)\n      })\n    },\n    objectSpanMethod ({row, column, rowIndex, columnIndex}) { // 合并列\n      if (columnIndex === 0) {\n        if (rowIndex === this.testdata[row.area][0]) {\n          return { rowspan: this.testdata[row.area][1], colspan: 1 }\n        } else {\n          return { rowspan: 0, colspan: 0 }\n        }\n      }\n    },\n    draw_monthCount () { // 图1\n      this.$http({\n        method: 'post',\n        url: 'http://132.96.194.30:8078/report/amount/',\n        data: {\n          'statisticsType': 3,\n          'year': this.myYear,\n          'month': this.myMonth,\n          'target': 'table'\n        }\n      }).then(response => {\n        if (response.data.status) {\n          var cityList = []\n          var transmissionValueList = []\n          var dynamicsValueList = []\n          var exchangeValueList = []\n          var ANValueList = []\n          var wirelessValueList = []\n          var data = response.data.result\n          var l = response.data.result.length\n          for (var i = 0; i < l; i++) {\n            cityList.push(data[i]['city'])\n            transmissionValueList.push(data[i]['transmission'])\n            dynamicsValueList.push(data[i]['dynamics'])\n            exchangeValueList.push(data[i]['exchange'])\n            ANValueList.push(data[i]['AN'])\n            wirelessValueList.push(data[i]['wireless'])\n          }\n          let myChart = this.$echarts.init(document.getElementById('chart_monthCount'))\n          myChart.setOption({\n            title: {\n              text: ''\n            },\n            tooltip: {\n              trigger: 'axis',\n              axisPointer: { // 坐标轴指示器，坐标轴触发有效\n                type: 'shadow' // 默认为直线，可选为：'line' | 'shadow'\n              }\n            },\n            legend: {\n              data: ['传输', '动力', '交换', '接入网', '无线']\n            },\n            grid: {\n              left: '3%',\n              right: '4%',\n              bottom: '3%',\n              containLabel: true\n            },\n            yAxis: {\n              type: 'value',\n              height: 600\n            },\n            xAxis: {\n              type: 'category',\n              data: cityList\n            },\n            series: [\n              {\n                name: '传输',\n                type: 'bar',\n                stack: '总量',\n                label: {\n                  normal: {\n                    show: false,\n                    position: 'insideRight'\n                  }\n                },\n                data: transmissionValueList\n              },\n              {\n                name: '动力',\n                type: 'bar',\n                stack: '总量',\n                label: {\n                  normal: {\n                    show: false,\n                    position: 'insideRight'\n                  }\n                },\n                data: dynamicsValueList\n              },\n              {\n                name: '交换',\n                type: 'bar',\n                stack: '总量',\n                label: {\n                  normal: {\n                    show: false,\n                    position: 'insideRight'\n                  }\n                },\n                data: exchangeValueList\n              },\n              {\n                name: '接入网',\n                type: 'bar',\n                stack: '总量',\n                label: {\n                  normal: {\n                    show: false,\n                    position: 'insideRight'\n                  }\n                },\n                data: ANValueList\n              },\n              {\n                name: '无线',\n                type: 'bar',\n                stack: '总量',\n                label: {\n                  normal: {\n                    show: false,\n                    position: 'insideRight'\n                  }\n                },\n                data: wirelessValueList\n              }\n            ]\n          })\n        }\n      }).catch(error => {\n        console.log(error)\n      })\n    },\n    table_monthQuality () { // 表二\n      this.$http({\n        method: 'post',\n        url: 'http://132.96.194.30:8078/report/quality/',\n        data: {\n          'statisticsType': 3,\n          'year': this.myYear,\n          'month': this.myMonth\n        }\n      }).then(response => {\n        if (response.data.status) {\n          this.monthQualityData = response.data.result\n        }\n      }).catch(error => {\n        console.log(error)\n      })\n    },\n    getAverage (param) {\n      const { columns, data } = param\n      const sums = []\n      const average = []\n      columns.forEach((column, index) => {\n        if (index === 0) {\n          average[index] = '平均值'\n          return\n        }\n        const values = data.map(item => Number(item[column.property]))\n        if (!values.every(value => isNaN(value))) {\n          sums[index] = values.reduce((prev, curr) => {\n            const value = Number(curr)\n            if (!isNaN(value)) {\n              return prev + curr\n            } else {\n              return prev\n            }\n          }, 0)\n          sums[index] += ' '\n          average[index] = sums[index] / values.length\n          average[index] = average[index].toFixed(2)\n        } else {\n          average[index] = 'N/A'\n        }\n      })\n\n      return average\n    },\n    draw_monthIntimeRate () {\n      this.$http({\n        method: 'post',\n        url: 'http://132.96.194.30:8078/report/quality/',\n        data: {\n          'statisticsType': 3,\n          'year': this.myYear,\n          'month': this.myMonth\n        }\n      }).then(response => { // this.chart_IntimeRate = response.data.result\n        if (response.data.status) {\n          var cityList = []\n          var valueList = []\n          var data = response.data.result\n          var l = response.data.result.length\n          for (var i = 0; i < l; i++) {\n            cityList.push(data[i]['city'])\n            valueList.push(data[i]['IntimeRate'])\n          }\n          let myChart = this.$echarts.init(document.getElementById('chart_IntimeRate'))\n          myChart.setOption({\n            title: {\n              text: '处理及时率'\n            },\n            tooltip: {\n              trigger: 'axis',\n              axisPointer: { // 坐标轴指示器，坐标轴触发有效\n                type: 'shadow' // 默认为直线，可选为：'line' | 'shadow'\n              }\n            },\n            xAxis: {\n              type: 'category',\n              data: cityList\n            },\n            yAxis: {\n              type: 'value'\n            },\n            series: [{\n              data: valueList,\n              type: 'bar'\n            }]\n          })\n        }\n      }).catch(error => {\n        console.log(error)\n      })\n    },\n    draw_monthAverageTime () {\n      this.$http({\n        method: 'post',\n        url: 'http://132.96.194.30:8078/report/quality/',\n        data: {\n          'statisticsType': 3,\n          'year': this.myYear,\n          'month': this.myMonth\n        }\n      }).then(response => { // this.chart_IntimeRate = response.data.result\n        if (response.data.status) {\n          var cityList = []\n          var valueList = []\n          var data = response.data.result\n          var l = response.data.result.length\n          for (var i = 0; i < l; i++) {\n            cityList.push(data[i]['city'])\n            valueList.push(data[i]['AverageTime'])\n          }\n          let myChart = this.$echarts.init(document.getElementById('chart_AverageTime'))\n          myChart.setOption({\n            title: {\n              text: '平均处理时长'\n            },\n            tooltip: {\n              trigger: 'axis',\n              axisPointer: { // 坐标轴指示器，坐标轴触发有效\n                type: 'shadow' // 默认为直线，可选为：'line' | 'shadow'\n              }\n            },\n            xAxis: {\n              type: 'category',\n              data: cityList\n            },\n            yAxis: {\n              type: 'value'\n            },\n            series: [{\n              data: valueList,\n              type: 'bar'\n            }]\n          })\n        }\n      }).catch(error => {\n        console.log(error)\n      })\n    },\n    draw_monthOver48Rate () {\n      this.$http({\n        method: 'post',\n        url: 'http://132.96.194.30:8078/report/quality/',\n        data: {\n          'statisticsType': 3,\n          'year': this.myYear,\n          'month': this.myMonth\n        }\n      }).then(response => { // this.chart_IntimeRate = response.data.result\n        if (response.data.status) {\n          var cityList = []\n          var valueList = []\n          var data = response.data.result\n          var l = response.data.result.length\n          for (var i = 0; i < l; i++) {\n            cityList.push(data[i]['city'])\n            valueList.push(data[i]['Over48Rate'])\n          }\n          let myChart = this.$echarts.init(document.getElementById('chart_Over48Rate'))\n          myChart.setOption({\n            title: {\n              text: '超过48小时工单占比'\n            },\n            tooltip: {\n              trigger: 'axis',\n              axisPointer: { // 坐标轴指示器，坐标轴触发有效\n                type: 'shadow' // 默认为直线，可选为：'line' | 'shadow'\n              }\n            },\n            xAxis: {\n              type: 'category',\n              data: cityList\n            },\n            yAxis: {\n              type: 'value'\n            },\n            series: [{\n              data: valueList,\n              type: 'bar'\n            }]\n          })\n        }\n      }).catch(error => {\n        console.log(error)\n      })\n    },\n    table_monthAnalysis () {\n      this.$http({\n        method: 'post',\n        url: 'http://132.96.194.30:8078/report/specific/',\n        data: {\n          'statisticsType': 3,\n          'year': this.myYear,\n          'month': this.myMonth\n        }\n      }).then(response => {\n        if (response.data.status) {\n          this.monthAnalysisData = response.data.result\n        }\n      }).catch(error => {\n        console.log(error)\n      })\n    },\n    table_monthProcesstime () {\n      this.$http({\n        method: 'post',\n        url: 'http://132.96.194.30:8078/report/specific/',\n        data: {\n          'statisticsType': 3,\n          'year': this.myYear,\n          'month': this.myMonth\n        }\n      }).then(response => {\n        if (response.data.status) {\n          this.monthProcesstimeData = response.data.result\n        }\n      }).catch(error => {\n        console.log(error)\n      })\n    },\n    draw_monthAnalysis () {\n      this.$http({\n        method: 'post',\n        url: 'http://132.96.194.30:8078/report/specific/',\n        data: {\n          'statisticsType': 3,\n          'year': this.myYear,\n          'month': this.myMonth\n        }\n      }).then(response => {\n        if (response.data.status) {\n          var cityList = []\n          var lineValueList = []\n          var powerValueList = []\n          var equipmentValueList = []\n          var environmentValueList = []\n          var otherValueList = []\n          var data = response.data.result\n          var l = response.data.result.length\n          for (var i = 0; i < l; i++) {\n            cityList.push(data[i]['city'])\n            lineValueList.push(data[i]['line_amount'])\n            powerValueList.push(data[i]['power_amount'])\n            equipmentValueList.push(data[i]['equipment_amount'])\n            environmentValueList.push(data[i]['environment_amount'])\n            otherValueList.push(data[i]['other_amount'])\n          }\n          let myChart = this.$echarts.init(document.getElementById('chart_monthAnalysis'))\n          myChart.setOption({\n            tooltip: {\n              trigger: 'axis'\n            },\n            legend: {\n              data: ['线路', '停电', '设备', '动环', '其他']\n            },\n            grid: {\n              left: '3%',\n              right: '4%',\n              bottom: '3%',\n              containLabel: true\n            },\n            toolbox: {\n              feature: {\n                saveAsImage: {}\n              }\n            },\n            xAxis: {\n              type: 'category',\n              boundaryGap: false,\n              data: cityList\n            },\n            yAxis: {\n              type: 'value'\n            },\n            series: [\n              {\n                name: '线路',\n                type: 'line',\n                stack: '总量',\n                data: lineValueList\n              },\n              {\n                name: '停电',\n                type: 'line',\n                stack: '总量',\n                data: powerValueList\n              },\n              {\n                name: '设备',\n                type: 'line',\n                stack: '总量',\n                data: equipmentValueList\n              },\n              {\n                name: '动环',\n                type: 'line',\n                stack: '总量',\n                data: environmentValueList\n              },\n              {\n                name: '其他',\n                type: 'line',\n                stack: '总量',\n                data: otherValueList\n              }\n            ]\n          })\n        }\n      }).catch(error => {\n        console.log(error)\n      })\n    },\n    draw_monthLinePower () {\n      this.$http({\n        method: 'post',\n        url: 'http://132.96.194.30:8078/report/specific/',\n        data: {\n          'statisticsType': 3,\n          'year': this.myYear,\n          'month': this.myMonth\n        }\n      }).then(response => {\n        if (response.data.status) {\n          var cityList = []\n          var lineValueList = []\n          var powerValueList = []\n          var data = response.data.result\n          var l = response.data.result.length\n          for (var i = 0; i < l; i++) {\n            cityList.push(data[i]['city'])\n            lineValueList.push(data[i]['line_amount'])\n            powerValueList.push(data[i]['power_amount'] * (-1))\n          }\n          let myChart = this.$echarts.init(document.getElementById('chart_linePower'))\n          myChart.setOption({\n            title: {\n              text: '线路及停电故障单量'\n            },\n            tooltip: {\n              trigger: 'axis',\n              axisPointer: { // 坐标轴指示器，坐标轴触发有效\n                type: 'shadow' // 默认为直线，可选为：'line' | 'shadow'\n              }\n            },\n            legend: {\n              data: ['线路', '停电']\n            },\n            grid: {\n              left: '3%',\n              right: '4%',\n              bottom: '3%',\n              containLabel: true\n            },\n            xAxis: [\n              {\n                type: 'value',\n                axisLabel: {\n                  formatter: function (value) {\n                    return Math.abs(value) // 显示的数值都取绝对值\n                  }\n                }\n              }\n            ],\n            yAxis: [\n              {\n                type: 'category',\n                axisTick: {show: false},\n                data: cityList\n              }\n            ],\n            series: [\n              {\n                name: '线路',\n                type: 'bar',\n                stack: '总量',\n                label: {\n                  normal: {\n                    show: true\n                  }\n                },\n                data: lineValueList\n              },\n              {\n                name: '停电',\n                type: 'bar',\n                stack: '总量',\n                label: {\n                  normal: {\n                    show: true,\n                    formatter: function (value) {\n                      if (value.data < 0) {\n                        return -value.data\n                      }\n                    }\n                  }\n                },\n                data: powerValueList\n              }\n            ]\n          })\n        }\n      }).catch(error => {\n        console.log(error)\n      })\n    },\n    draw_monthProcesstime () {\n      this.$http({\n        method: 'post',\n        url: 'http://132.96.194.30:8078/report/specific/',\n        data: {\n          'statisticsType': 3,\n          'year': this.myYear,\n          'month': this.myMonth\n        }\n      }).then(response => {\n        if (response.data.status) {\n          var cityList = []\n          var lineTimeValueList = []\n          var powerTimeValueList = []\n          var data = response.data.result\n          var l = response.data.result.length\n          for (var i = 0; i < l; i++) {\n            cityList.push(data[i]['city'])\n            lineTimeValueList.push(data[i]['line_time'])\n            powerTimeValueList.push(data[i]['power_time'] * (-1))\n          }\n          let myChart = this.$echarts.init(document.getElementById('chart_monthProcesstime'))\n          myChart.setOption({\n            title: {\n              text: '线路及停电故障处理时长'\n            },\n            tooltip: {\n              trigger: 'axis',\n              axisPointer: { // 坐标轴指示器，坐标轴触发有效\n                type: 'shadow' // 默认为直线，可选为：'line' | 'shadow'\n              }\n            },\n            legend: {\n              data: ['线路故障处理时长（小时）', '停电故障处理时长（小时）']\n            },\n            grid: {\n              left: '3%',\n              right: '4%',\n              bottom: '3%',\n              containLabel: true\n            },\n            xAxis: [\n              {\n                type: 'value',\n                axisLabel: {\n                  formatter: function (value) {\n                    return Math.abs(value) // 显示的数值都取绝对值\n                  }\n                }\n              }\n            ],\n            yAxis: [\n              {\n                type: 'category',\n                axisTick: {show: false},\n                data: cityList\n              }\n            ],\n            series: [\n              {\n                name: '线路',\n                type: 'bar',\n                stack: '总量',\n                label: {\n                  normal: {\n                    show: true\n                  }\n                },\n                data: lineTimeValueList\n              },\n              {\n                name: '停电',\n                type: 'bar',\n                stack: '总量',\n                label: {\n                  normal: {\n                    show: true,\n                    formatter: function (value) {\n                      if (value.data < 0) {\n                        return -value.data\n                      }\n                    }\n                  }\n                },\n                data: powerTimeValueList\n              }\n            ]\n          })\n        }\n      }).catch(error => {\n        console.log(error)\n      })\n    },\n    DataFilter () {\n      this.table_monthCount()\n      this.draw_monthCount()\n      this.table_monthQuality()\n      this.draw_monthIntimeRate()\n      this.draw_monthAverageTime()\n      this.draw_monthOver48Rate()\n      this.table_monthAnalysis()\n      this.table_monthProcesstime()\n      this.draw_monthAnalysis()\n      this.draw_monthLinePower()\n      this.draw_monthProcesstime()\n    }\n  },\n  mounted () {\n\n  }\n}\n</script>\n<style>\n  .el-header{\n        height: 180px;\n        color: rgb(110,110,110);\n        text-align: center;\n        line-height: 60px;\n        font: 28px/60px bold 微软雅黑;\n    }\n  .el-main {\n        /*background-color: #E9EEF3;*/\n        color: #333;\n    }\n  .main {\n      margin: 0 auto;\n      width: 900px;\n    }\n  .main h3{\n      font: 18px/20px bold 微软雅黑;\n      color: rgb(130,130,130);\n      text-align:left;\n    }\n  .table_monthCount,.table_monthQuality,.table_monthAnalysis,.table_monthProcesstime{\n    margin: 20px 90px;\n  }\n  .el-table .cell{\n    line-height: 15px;\n  }\n  .el-form-item{\n    margin-bottom: -13px;\n  }\n\n</style>\n\n\n\n// WEBPACK FOOTER //\n// src/components/Monthly.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('el-container',[_c('el-header',[_vm._v(\"\\n          广东电信故障工单月度管控通报\\n          \")]),_vm._v(\" \"),_c('span',{staticStyle:{\"text-align\":\"center\",\"color\":\"rgb(21,82,179)\",\"font-weight\":\"bold\"}},[_vm._v(\"\\n            △全省网络故障单量情况统计\\n            △全省故障工单处理质量情况分析\\n            △全省故障工单处理质量情况分析\\n          \"),_c('hr',{staticStyle:{\"height\":\"1px\",\"background-color\":\"rgb(21,82,179)\",\"border\":\"none\"}})]),_vm._v(\" \"),_c('div',{staticClass:\"time-filter\",staticStyle:{\"width\":\"500px\",\"margin\":\"0 auto\"}},[_c('div',{staticClass:\"block\",staticStyle:{\"margin\":\"0 auto\"}},[_c('el-form',{ref:\"form\",attrs:{\"model\":_vm.form,\"label-width\":\"80px\"}},[_c('el-row',{attrs:{\"gutter\":10}},[_c('el-col',{attrs:{\"span\":11}},[_c('el-form-item',[_c('el-date-picker',{attrs:{\"clearable\":\"\",\"type\":\"month\",\"placeholder\":\"选择月\"},model:{value:(_vm.valueMonth),callback:function ($$v) {_vm.valueMonth=$$v},expression:\"valueMonth\"}})],1)],1),_vm._v(\" \"),_c('el-col',{attrs:{\"span\":2}},[_c('el-form-item',[_c('el-button',{attrs:{\"type\":\"primary\"},on:{\"click\":function($event){_vm.DataFilter()}}},[_vm._v(\"提交\")])],1)],1)],1)],1)],1)]),_vm._v(\" \"),_c('el-main',[_c('div',{staticClass:\"main\"},[_c('h3',[_vm._v(\"一、  全省网络故障单量情况统计\")]),_vm._v(\" \"),_c('div',{staticClass:\"count\"},[_c('div',{staticStyle:{\"width\":\"900px\",\"height\":\"400px\",\"border\":\"1px solid\"},attrs:{\"id\":\"chart_monthCount\"}}),_vm._v(\" \"),_c('div',{staticClass:\"table_monthCount\"},[[_c('el-table',{staticStyle:{\"width\":\"700px\"},attrs:{\"data\":_vm.monthCountData,\"show-summary\":\"\",\"border\":\"\",\"span-method\":_vm.objectSpanMethod}},[_c('el-table-column',{attrs:{\"prop\":\"area\",\"label\":\"区域\",\"width\":\"100\",\"align\":\"center\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"city\",\"label\":\"地市\",\"width\":\"100\",\"align\":\"center\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"label\":\"专业\",\"align\":\"center\"}},[_c('el-table-column',{attrs:{\"prop\":\"transmission\",\"label\":\"传输\",\"minwidth\":\"\",\"align\":\"center\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"dynamics\",\"label\":\"动力\",\"minwidth\":\"\",\"align\":\"center\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"exchange\",\"label\":\"交换\",\"minwidth\":\"\",\"align\":\"center\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"AN\",\"label\":\"接入网\",\"minwidth\":\"\",\"align\":\"center\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"wireless\",\"label\":\"无线\",\"minwidth\":\"\",\"align\":\"center\"}})],1),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"sum\",\"label\":\"合计\",\"minwidth\":\"\",\"align\":\"center\"}})],1)]],2)]),_vm._v(\" \"),_c('h3',[_vm._v(\"二、  全省故障工单处理质量情况分析\")]),_vm._v(\" \"),_c('div',{staticClass:\"quality\"},[_c('div',{staticStyle:{\"width\":\"900px\",\"height\":\"400px\",\"border\":\"1px solid\"},attrs:{\"id\":\"chart_IntimeRate\"}}),_vm._v(\" \"),_c('div',{staticStyle:{\"width\":\"900px\",\"height\":\"400px\",\"border\":\"1px solid\"},attrs:{\"id\":\"chart_AverageTime\"}}),_vm._v(\" \"),_c('div',{staticStyle:{\"width\":\"900px\",\"height\":\"400px\",\"border\":\"1px solid\"},attrs:{\"id\":\"chart_Over48Rate\"}}),_vm._v(\" \"),_c('div',{staticClass:\"table_monthQuality\"},[[_c('el-table',{staticStyle:{\"width\":\"700px\"},attrs:{\"data\":_vm.monthQualityData,\"summary-method\":_vm.getAverage,\"show-summary\":\"\",\"border\":\"\",\"span-method\":_vm.objectSpanMethod}},[_c('el-table-column',{attrs:{\"prop\":\"area\",\"label\":\"区域\",\"width\":\"100\",\"align\":\"center\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"city\",\"label\":\"地市\",\"width\":\"100\",\"align\":\"center\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"receive\",\"label\":\"签单及时率（%）\",\"minwidth\":\"\",\"align\":\"center\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"IntimeRate\",\"label\":\"故障处理及时率（%）\",\"minwidth\":\"\",\"align\":\"center\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"AverageTime\",\"label\":\"平均处理时长（小时）\",\"minwidth\":\"\",\"align\":\"center\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"Over48Rate\",\"label\":\"超过48小时工单占比(%)\",\"minwidth\":\"\",\"align\":\"center\"}})],1)]],2)]),_vm._v(\" \"),_c('h3',[_vm._v(\"三、  全省网络故障单原因分析\")]),_vm._v(\" \"),_c('div',{staticClass:\"analysis\"},[_c('div',{staticStyle:{\"width\":\"900px\",\"height\":\"400px\",\"border\":\"1px solid\"},attrs:{\"id\":\"chart_monthAnalysis\"}}),_vm._v(\" \"),_c('div',{staticStyle:{\"width\":\"900px\",\"height\":\"400px\",\"border\":\"1px solid\"},attrs:{\"id\":\"chart_linePower\"}}),_vm._v(\" \"),_c('div',{staticClass:\"table_monthAnalysis\"},[[_c('el-table',{staticStyle:{\"width\":\"700px\"},attrs:{\"data\":_vm.monthAnalysisData,\"show-summary\":\"\",\"border\":\"\",\"span-method\":_vm.objectSpanMethod}},[_c('el-table-column',{attrs:{\"prop\":\"area\",\"label\":\"区域\",\"width\":\"100\",\"align\":\"center\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"city\",\"label\":\"地市\",\"width\":\"100\",\"align\":\"center\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"line_amount\",\"label\":\"线路（张）\",\"minwidth\":\"\",\"align\":\"center\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"power_amount\",\"label\":\"停电（张）\",\"minwidth\":\"\",\"align\":\"center\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"equipment_amount\",\"label\":\"设备（张）\",\"minwidth\":\"\",\"align\":\"center\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"environment_amount\",\"label\":\"动环(张)\",\"minwidth\":\"\",\"align\":\"center\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"other_amount\",\"label\":\"其他(张)\",\"minwidth\":\"\",\"align\":\"center\"}})],1)]],2),_vm._v(\" \"),_c('div',{staticStyle:{\"width\":\"900px\",\"height\":\"400px\",\"border\":\"1px solid\"},attrs:{\"id\":\"chart_monthProcesstime\"}}),_vm._v(\" \"),_c('div',{staticClass:\"table_monthProcesstime\"},[[_c('el-table',{staticStyle:{\"width\":\"700px\"},attrs:{\"data\":_vm.monthProcesstimeData,\"summary-method\":_vm.getAverage,\"show-summary\":\"\",\"border\":\"\",\"span-method\":_vm.objectSpanMethod}},[_c('el-table-column',{attrs:{\"prop\":\"area\",\"label\":\"区域\",\"width\":\"100\",\"align\":\"center\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"city\",\"label\":\"地市\",\"width\":\"100\",\"align\":\"center\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"line_time\",\"label\":\"线路故障平均处理时长（小时）\",\"minwidth\":\"\",\"align\":\"center\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"power_time\",\"label\":\"停电故障平均处理时长（小时）\",\"minwidth\":\"\",\"align\":\"center\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"equipment_time\",\"label\":\"设备故障平均处理时长（小时）\",\"minwidth\":\"\",\"align\":\"center\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"environment_time\",\"label\":\"动环故障平均处理时长（小时）\",\"minwidth\":\"\",\"align\":\"center\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"other_time\",\"label\":\"其他故障平均处理时长（小时）\",\"minwidth\":\"\",\"align\":\"center\"}})],1)]],2)])])])],1)],1)}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-368c9720\",\"hasScoped\":false,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/components/Monthly.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-368c9720\\\",\\\"scoped\\\":false,\\\"hasInlineConfig\\\":false}!../../node_modules/vue-loader/lib/selector?type=styles&index=0!./Monthly.vue\")\n}\nvar normalizeComponent = require(\"!../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./Monthly.vue\"\nimport __vue_script__ from \"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./Monthly.vue\"\n/* template */\nimport __vue_template__ from \"!!../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-368c9720\\\",\\\"hasScoped\\\":false,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../node_modules/vue-loader/lib/selector?type=template&index=0!./Monthly.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/Monthly.vue\n// module id = null\n// module chunks = "],"sourceRoot":""}